{"ast":null,"code":"var _jsxFileName = \"/home/flora/my-app/src/components/Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Game.css';\nimport Board from \"./Board\";\nimport { calculateWinner } from '../helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const winner = calculateWinner(board);\n  const handlClick = index => {\n    const boardCopy = [...board];\n    if (winner || boardCopy[index]) return;\n    boardCopy[index] = xIsNext ? 'x' : '0';\n    setBoard(boardCopy);\n    setXIsNext(!xIsNext);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Board, {\n      squares: board,\n      click: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"znBF1eYeJNOReqN4BeETvwkOe4A=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","Board","calculateWinner","jsxDEV","_jsxDEV","Game","_s","board","setBoard","Array","fill","xIsNext","setXIsNext","winner","handlClick","index","boardCopy","className","children","squares","click","handleClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/flora/my-app/src/components/Game.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport './Game.css'\nimport Board from \"./Board\";\nimport { calculateWinner } from '../helper';\n\nconst Game = () => {\n    const [board, setBoard] = useState(Array(9).fill(null))\n    const [xIsNext, setXIsNext] = useState(true)\n    const winner = calculateWinner(board)\n\n    const handlClick = (index) => {\n        const boardCopy = [...board]\n\n        if (winner || boardCopy[index])\n            return\n\n        boardCopy[index] = xIsNext ? 'x' : '0'\n\n        setBoard(boardCopy)\n        setXIsNext(!xIsNext)\n    }\n\n    return (\n        <div className=\"wrapper\">\n            <Board squares={board} click={handleClick}/> \n        </div>\n    )\n}\n\nexport default Game"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AACnB,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,eAAe,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAACS,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACvD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMa,MAAM,GAAGX,eAAe,CAACK,KAAK,CAAC;EAErC,MAAMO,UAAU,GAAIC,KAAK,IAAK;IAC1B,MAAMC,SAAS,GAAG,CAAC,GAAGT,KAAK,CAAC;IAE5B,IAAIM,MAAM,IAAIG,SAAS,CAACD,KAAK,CAAC,EAC1B;IAEJC,SAAS,CAACD,KAAK,CAAC,GAAGJ,OAAO,GAAG,GAAG,GAAG,GAAG;IAEtCH,QAAQ,CAACQ,SAAS,CAAC;IACnBJ,UAAU,CAAC,CAACD,OAAO,CAAC;EACxB,CAAC;EAED,oBACIP,OAAA;IAAKa,SAAS,EAAC,SAAS;IAAAC,QAAA,eACpBd,OAAA,CAACH,KAAK;MAACkB,OAAO,EAAEZ,KAAM;MAACa,KAAK,EAAEC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEd,CAAC;AAAAnB,EAAA,CAtBKD,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AAwBV,eAAeA,IAAI;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}